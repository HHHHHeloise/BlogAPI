{"version":3,"sources":["components/Auth/AuthContext.js","components/Auth/Login.js","components/Restaurants/Restaurant.js","components/Restaurants/RestaurantList.js","components/Auth/Signup.js","components/Restaurants/StarRatingInput.js","components/Restaurants/ReviewPage.js","components/Restaurants/RestaurantDetail.js","components/Restaurants/WriteReviewPage.js","components/Restaurants/SuccessPage.js","components/Restaurants/OwnerDashboard.js","components/Restaurants/UploadImagePage.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","AuthProvider","_ref","children","token","setToken","useState","window","sessionStorage","getItem","useEffect","axios","defaults","headers","common","setItem","removeItem","_jsx","Provider","value","saveToken","newToken","Login","email","setEmail","React","password","setPassword","navigate","useNavigate","_jsxs","className","onSubmit","event","preventDefault","data","post","then","response","console","log","localStorage","username","role","userId","alert","catch","error","type","placeholder","onChange","e","target","href","SearchBar","onSearch","name","setName","location","setLocation","isAuthenticated","handleSearch","endpoint","requestBody","fetch","method","body","JSON","stringify","json","handleKeyDown","key","userIconStyle","backgroundColor","getRandomColor","colors","Math","floor","random","length","DropdownMenu","_ref2","_Fragment","FaYelp","size","style","color","onKeyDown","onClick","FaSearch","Link","to","charAt","toUpperCase","Filters","RestaurantEntry","id","imageUrls","rating","cuisine","price","isOpen","features","description","reviews","firstImageUrl","url","getStarColor","cuisines","split","map","c","trim","src","alt","Array","from","round","_","i","FontAwesomeIcon","icon","faStar","faRocketchat","RestaurantListing","restaurants","setRestaurants","createdBy","results","restaurant","index","Signup","setUsername","setRole","async","userData","checked","StarRatingInput","setRating","hover","setHover","setRatingState","ratingValue","onMouseEnter","onMouseLeave","getRatingLabel","UserReviewPrompt","fontWeight","faCamera","OverallRating","averageRating","reviewCount","reviewCountsByStar","reduce","acc","review","roundedScore","score","totalReviews","Object","values","sum","count","isActive","star","width","toFixed","ReviewFilters","faCaretDown","faSearch","ReviewList","_ref3","menuVisible","setMenuVisible","actionMenuRef","useRef","handleClickOutside","current","contains","document","addEventListener","removeEventListener","ref","faEllipsisH","WriteReviewForm","_ref4","restaurantId","onCancel","reviewText","setReviewText","tags","setTags","food","service","ambiance","handleTagClick","tag","submitReview","config","RecommendedReviews","_ref5","restaurantName","filteredReviews","setFilteredReviews","writingReview","setWritingReview","onWriteReview","searchText","filtered","filter","toLowerCase","includes","PhotoGallery","currentIndex","setCurrentIndex","goPrev","prevIndex","max","disabled","FaBackward","slice","imageUrl","goNext","min","FaForward","FaCamera","Buttons","isSaved","setIsSaved","marginLeft","FaArrowUpFromBracket","handleSaveToFavorites","success","Error","message","faBookmark","ContactInfo","phone","website","faPencilAlt","marginRight","Menu","menu","handleFullMenuClick","FaArrowUpRightFromSquare","FaBook","LocationAndHours","hours","address","hoursJson","parse","dayOrder","today","moment","format","sortedDays","entries","sort","a","b","indexOf","_ref6","day","open","hourRange","openTime","closeTime","now","startTime","endTime","isBefore","add","subtract","isBetween","isCurrentlyOpen","isToday","RestaurantDetail","useParams","restaurantDetails","setRestaurantDetails","setReviews","setAverageRating","fetchReviews","totalScore","WriteReviewPage","authContext","setBody","setScore","setRestaurantName","reviewData","Number","ok","SuccessPage","LuPartyPopper","OwnerDashboard","setRestaurant","zipcode","handleChange","UploadImagePage","files","setFiles","dragOver","setDragOver","fileInputRef","handleFileChange","newFiles","dataTransfer","prev","onDragOver","onDragLeave","onDrop","click","multiple","display","file","URL","createObjectURL","removeImage","faTrash","handleUpload","formData","FormData","forEach","append","App","element","useRoutes","path","Home","HomePage","RestaurantList","Search","margin","borderColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","Router"],"mappings":"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","file":"static/js/main.2c16e432.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [token, setToken] = useState(window.sessionStorage.getItem('token'));\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n            window.sessionStorage.setItem('token', token);\r\n        } else {\r\n            delete axios.defaults.headers.common['Authorization'];\r\n            window.sessionStorage.removeItem('token');\r\n        }\r\n    }, [token]);\r\n\r\n    const saveToken = (newToken) => {\r\n        setToken(newToken);\r\n        if (newToken) {\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n            window.sessionStorage.setItem('token', newToken);\r\n        } else {\r\n            delete axios.defaults.headers.common['Authorization'];\r\n            window.sessionStorage.removeItem('token');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ token, saveToken }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport { useAuth } from './AuthContext'; \r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const navigate = useNavigate();\r\n    const { saveToken } = useAuth(); \r\n\r\n    const login = (event) => {\r\n        event.preventDefault();\r\n        const url = \"http://localhost:8080/api/v1/auth/authenticate\";\r\n        const data = { email, password };\r\n\r\n        axios.post(url, data).then(response => {\r\n            const data = response.data;  \r\n            console.log(\"Extracted token:\", data);  \r\n            if (data) {\r\n                localStorage.setItem('username', data.username);\r\n                localStorage.setItem('role', data.role);\r\n                console.log(data.role);\r\n                localStorage.setItem('userId', data.userId);\r\n                // localStorage.setItem('token', data.token);\r\n                console.log(data.userId);\r\n                saveToken(data.token); \r\n                console.log(data.token)\r\n                navigate('/list'); \r\n            } else {\r\n                console.log(\"Authentication failed: No token received.\");\r\n                alert(\"Login Failed. Please check your credentials.\");\r\n            }\r\n        }).catch(error => {\r\n            console.error(\"Login error:\", error);\r\n            alert(\"Login Failed. Please check your credentials and try again.\");\r\n        });\r\n\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-header\">Log in to YYYYYelppppppp</div>\r\n            <form onSubmit={login} className=\"login-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    className=\"login-input\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    className=\"login-input\"\r\n                />\r\n                <button type=\"submit\" className=\"login-button\">Log In</button>\r\n                <div className=\"login-links\">\r\n                    <a href=\"/forgot-password\" className=\"forgot-password\">Forgot password?</a>\r\n                    <a href=\"/signup\" className=\"signup-link\">New to Yelp? Sign up</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { FaYelp, FaSearch } from 'react-icons/fa';  \r\nimport { Link } from 'react-router-dom';\r\nimport './Restaurants.css';\r\n\r\nconst SearchBar = ({ onSearch }) => {\r\n    const [name, setName] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const isAuthenticated = localStorage.getItem('token') ? true : false; \r\n    const role = localStorage.getItem('role');\r\n    const username = localStorage.getItem('username');\r\n\r\n    const handleSearch = () => {\r\n        const searchUrl = `http://localhost:8080/api/v1/restaurants/`;\r\n        let endpoint = '';\r\n        const requestBody = {};\r\n\r\n        if (name && location) {\r\n            endpoint = 'searchByNameAndLocation'; \r\n            requestBody.name = name;\r\n            requestBody.location = location;\r\n        } else if (name) {\r\n            endpoint = 'search';\r\n            requestBody.name = name;\r\n            requestBody.location = \"Stony Brook\";  // Default location\r\n        } else if (location) {\r\n            endpoint = 'searchByLocation';\r\n            requestBody.location = location;\r\n        }\r\n\r\n        fetch(searchUrl + endpoint, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            onSearch(data);\r\n            console.log(data);\r\n        })\r\n        .catch(error => {\r\n            console.error('Error performing the search:', error);\r\n        });\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleSearch();\r\n        }\r\n    };\r\n\r\n    const getRandomColor = () => {\r\n        const colors = ['#e57373', '#64b5f6', '#81c784', '#ffb74d', '#ba68c8'];\r\n        return colors[Math.floor(Math.random() * colors.length)];\r\n    };\r\n\r\n    const userIconStyle = {\r\n        backgroundColor: getRandomColor()\r\n    };\r\n\r\n    const DropdownMenu = ({ role }) => {\r\n        return (\r\n            <div className=\"dropdown-menu\">\r\n                {role === 'owner' ? (\r\n                    <>\r\n                        <a href=\"/manage-restaurant\" className=\"dropdown-item\">Manage your restaurant</a>\r\n                        <a href=\"/account-settings\" className=\"dropdown-item\">Account settings</a>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <a href=\"/manage-favorites\" className=\"dropdown-item\">Manage your favorites</a>\r\n                        <a href=\"/account-settings\" className=\"dropdown-item\">Account settings</a>\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"logo\">\r\n                <FaYelp size=\"30\" style={{ color: 'white' }} />\r\n                YYYYYelppppppp\r\n            </div>\r\n            <div className=\"searchContainer\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Restaurants\"\r\n                    className=\"searchInput\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Brookhaven, NY 11719\"\r\n                    className=\"locationInput\"\r\n                    value={location}\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                />\r\n                <button className=\"searchButton\" onClick={handleSearch}>\r\n                    <FaSearch />\r\n                </button>\r\n            </div>\r\n                <div className=\"navLinks\">\r\n                    {isAuthenticated ? (\r\n                    <div className=\"user-section\">\r\n                            {role === 'owner' && (\r\n                                <Link to=\"/start-business\" className=\"navLink-button\">Start Your Business</Link>\r\n                            )}\r\n                            <div className=\"userIcon\" style={userIconStyle}>\r\n                                {username ? username.charAt(0).toUpperCase() : 'U'}\r\n                                <DropdownMenu role={role} />\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <Link to=\"/start-business\" className=\"navLink\">Yelp for Business</Link>\r\n                            <Link to=\"/start-business\" className=\"navLink\">Write a Review</Link>\r\n                            <Link to=\"/login\" className=\"navLink-button\">Log In</Link>\r\n                            <Link to=\"/signup\" className=\"navLink-button\">Sign Up</Link>\r\n                        </>\r\n                    )}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './RestaurantList.css';\r\nimport './Restaurants.css'; \r\nimport SearchBar from './Restaurant';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { faRocketchat } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\nconst Filters = () => {\r\n  return (\r\n    <div className=\"filterContainer\">\r\n      <h2>Filters</h2>\r\n      <div className=\"filterSection\">\r\n        <h3>Price</h3>\r\n        <div className=\"filterButtonContainer\">\r\n          <button className=\"filterButton\">$</button>\r\n          <button className=\"filterButton\">$$</button>\r\n          <button className=\"filterButton\">$$$</button>\r\n          <button className=\"filterButton\">$$$$</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"filterSection\">\r\n        <h3>Suggested</h3>\r\n        <label className=\"checkboxLabel\"><input type=\"checkbox\" /> Open Now</label>\r\n        <label className=\"checkboxLabel\"><input type=\"checkbox\" /> Offers Delivery</label>\r\n        <label className=\"checkboxLabel\"><input type=\"checkbox\" /> Offers Takeout</label>\r\n        <label className=\"checkboxLabel\"><input type=\"checkbox\" /> Good for Dinner</label>\r\n        <label className=\"checkboxLabel\"><input type=\"checkbox\" /> Outdoor Seating</label>\r\n        <label className=\"checkboxLabel\"><input type=\"checkbox\" /> Good for Lunch</label>\r\n      </div>\r\n      <div className=\"filterSection\">\r\n        <h3>Category</h3>\r\n        <div className=\"categoryButtonContainer\">\r\n          <button className=\"categoryButton\">New American</button>\r\n          <button className=\"categoryButton\">Italian</button>\r\n          <button className=\"categoryButton\">Restaurants</button>\r\n          <button className=\"categoryButton\">American</button>\r\n          <button className=\"categoryButton\">Steakhouses</button>\r\n          <button className=\"categoryButton\">Seafood</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"seeAll\">See all</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RestaurantEntry = ({ id, imageUrls, name, rating, cuisine, price, isOpen, features, description, reviews }) => {\r\n  const navigate = useNavigate();\r\n  \r\n  const firstImageUrl = (imageUrls && imageUrls.length > 0) ? imageUrls[0].url : 'default-image.jpg';\r\n  const getStarColor = rating => {\r\n    if (rating >= 4) return \"red\";\r\n    if (rating >= 3) return \"orange\";\r\n    return \"yellow\";\r\n  };\r\n  const cuisines = cuisine ? cuisine.split(',').map(c => c.trim()) : [];\r\n\r\n    return (\r\n        <div className=\"restaurantEntry\" onClick={() => navigate(`/detail/${id}`)}>\r\n            <img src={firstImageUrl} alt={name} className=\"restaurantImage\" />\r\n            <div className=\"restaurantDetails\">\r\n                <h2 className=\"restaurantName\">{name}</h2>\r\n                <div className=\"restaurantMeta\">\r\n                    <span className=\"restaurantRating\">\r\n                        {Array.from({ length: Math.round(rating) }, (_, i) => (\r\n                          <FontAwesomeIcon icon={faStar} color={getStarColor(rating)} key={i} />\r\n                        ))}\r\n                    </span>\r\n                    <span className=\"restaurantReviews\">({reviews} reviews)</span>\r\n                    <div className=\"restaurantCuisines\">\r\n                        {cuisines.map(cuisine => (\r\n                            <span className=\"tag\" key={cuisine}>{cuisine}</span>\r\n                        ))}\r\n                        <span className=\"restaurantPrice\">{price}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"restaurantDescription\">\r\n                  <FontAwesomeIcon icon={faRocketchat} /> {description}\r\n                </div>\r\n                {/* <div className=\"restaurantFeatures\">\r\n                    {features.delivery && <span>Delivery</span>}\r\n                    {features.takeout && <span>Takeout</span>}\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst RestaurantListing = () => {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    \r\n    const navigate = useNavigate(); \r\n\r\n  useEffect(() => {\r\n    const role = localStorage.getItem('role');\r\n    console.log(role);\r\n    const userId = localStorage.getItem('userId');\r\n    console.log(userId);\r\n\r\n    let endpoint = 'http://localhost:8080/api/v1/restaurants/searchByLocation';\r\n    let body = JSON.stringify({ location: 'Stony Brook' });\r\n\r\n    if (role === 'owner') {\r\n      endpoint = 'http://localhost:8080/api/v1/restaurants/searchByOwner';\r\n      body = JSON.stringify({ createdBy: userId });\r\n    }\r\n\r\n        fetch(endpoint, {\r\n            method: 'POST', \r\n            headers: {\r\n                'Content-Type': 'application/json' \r\n          },\r\n          body: body \r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setRestaurants(data); \r\n            console.log(data);\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }, []); \r\n\r\n    const handleSearchResults = (results) => {\r\n        setRestaurants(results);\r\n        console.log(results);\r\n    };\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <SearchBar onSearch={handleSearchResults} />\r\n            <div className=\"content\">\r\n                <Filters />\r\n                <div className=\"restaurantsList\">\r\n                  {restaurants.length > 0 ? (\r\n                    restaurants.map((restaurant, index) => (\r\n                      <RestaurantEntry key={index} {...restaurant} onClick={() => navigate(`/detail/${restaurant.id}`)} />\r\n                    ))\r\n                  ) : (\r\n                    <div>No restaurants found</div>\r\n                  )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestaurantListing;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport './Signup.css';\r\n\r\nfunction Signup() {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [role, setRole] = useState('customer');\r\n    const navigate = useNavigate(); \r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const url = \"http://localhost:8080/api/v1/auth/signup\";\r\n        const userData = {\r\n            username,\r\n            email,\r\n            password,\r\n            role\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(url, userData);\r\n            console.log('Signup successful:', response.data);\r\n            navigate('/login');\r\n        } catch (error) {\r\n            console.error('Signup error:', error.response.data);\r\n        }\r\n    };\r\n\r\nreturn (\r\n        <div className=\"signup-container\">\r\n            <div className=\"login-header\">Sign in to YYYYYelppppppp</div>\r\n            <form onSubmit={handleSubmit} className=\"signup-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    className=\"signup-input\"\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    className=\"signup-input\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    className=\"signup-input\"\r\n                />\r\n                <div className=\"role-selection\">\r\n                    <div>Sign Up As</div>\r\n                    <label>\r\n                        <input type=\"radio\" name=\"role\" value=\"customer\" checked={role === 'customer'} onChange={() => setRole('customer')}/> Customer\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"radio\" name=\"role\" value=\"owner\" checked={role === 'owner'} onChange={() => setRole('owner')}/> Restaurant Owner\r\n                    </label>\r\n                </div>\r\n                <button type=\"submit\" className=\"signup-button\">Sign Up</button>\r\n                <div className=\"login-link\">\r\n                    Already on Yelp? <a href=\"/login\">Log in</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport './StarRatingInput.css';\r\n\r\nconst StarRatingInput = ({ setRating }) => {\r\n    const [hover, setHover] = useState(0);\r\n    const [rating, setRatingState] = useState(0);\r\n\r\n    const getRatingLabel = (ratingValue) => {\r\n        switch (ratingValue) {\r\n            case 0:\r\n                return 'Select your rating';\r\n            case 1:\r\n                return 'Not Good';\r\n            case 2:\r\n                return 'Could’ve been better';\r\n            case 3:\r\n                return 'OK';\r\n            case 4:\r\n                return 'Good';\r\n            case 5:\r\n                return 'Great';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"star-rating-input\">\r\n            {[...Array(5)].map((_, index) => {\r\n                const ratingValue = index + 1;\r\n                return (\r\n                    <span \r\n                        key={index}\r\n                        onClick={() => {\r\n                            setRating(ratingValue);\r\n                            setRatingState(ratingValue);\r\n                        }}\r\n                        onMouseEnter={() => setHover(ratingValue)}\r\n                        onMouseLeave={() => setHover(0)}\r\n                    >\r\n                        <FontAwesomeIcon\r\n                            icon={faStar}\r\n                            className=\"star\"\r\n                            size=\"2x\"\r\n                            color={ratingValue <= (hover || rating) ? \"#ffc107\" : \"#e4e5e9\"}\r\n                        />\r\n                    </span>\r\n                );\r\n            })}\r\n            <span className=\"rating-label\" style={{ color: (hover || rating) === 0 ? '#9b9b9b' : '#000' }}>\r\n                {getRatingLabel(hover || rating)}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StarRatingInput;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './OverallRating.css';\r\nimport './WriteReviewPage.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar, faCamera, faSearch, faCaretDown, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\r\nimport StarRatingInput from './StarRatingInput';\r\nimport axios from 'axios';\r\n\r\n\r\nconst UserReviewPrompt = () => {\r\n    const [rating, setRating] = useState(0);\r\n\r\n    return (\r\n        <div className=\"user-review-prompt\">\r\n            <div className=\"user-avatar\">\r\n                <img\r\n                    src=\"https://s3-media0.fl.yelpcdn.com/assets/public/default_user_avatar_64x64_v2.yji-19e0a8ff85b15f4bbd79.png\"\r\n                    alt=\"User Avatar\"\r\n                    className=\"avatar-img\"\r\n                />\r\n            </div>\r\n            <div className=\"user-details\">\r\n                <div style={{ fontWeight: 'bold' }}>Username</div>\r\n                <div>Location</div>\r\n                <div className=\"user-metrics\">\r\n                    <FontAwesomeIcon icon={faCamera} /> <span>0</span>\r\n                    <FontAwesomeIcon icon={faStar} /> <span>0</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"user-review-action\">\r\n                <StarRatingInput setRating={setRating} />\r\n                <a href=\"#\" className=\"start-review-link\">Start your review of Popeyes Louisiana Kitchen</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst OverallRating = ({ averageRating, reviewCount, reviews }) => {\r\n    const reviewCountsByStar = reviews.reduce((acc, review) => {\r\n        const roundedScore = Math.round(review.score); \r\n        acc[roundedScore] = acc[roundedScore] ? acc[roundedScore] + 1 : 1;\r\n        return acc;\r\n    }, {});\r\n\r\n    const totalReviews = Object.values(reviewCountsByStar).reduce((sum, count) => sum + count, 0);\r\n    console.log(averageRating);\r\n\r\n\r\n    return (\r\n        <div className=\"overall-rating-container\">\r\n            <div className=\"overall-rating\">\r\n                <span className=\"rating-title\">Overall rating</span>\r\n                <div className=\"rating-stars\">\r\n                    {[...Array(5)].map((_, index) => {\r\n                        const isActive = index < Math.round(averageRating);\r\n                        console.log(`Star ${index + 1}: ${isActive ? 'active' : 'inactive'}`);\r\n                        return (\r\n                            <FontAwesomeIcon\r\n                                key={index}\r\n                                icon={faStar}\r\n                                className=\"star-icon\"\r\n                                color={isActive ? \"#ffc107\" : \"#e4e5e9\"}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n                <span className=\"review-count\">{reviewCount} reviews</span>\r\n            </div>\r\n            <div className=\"rating-breakdown\">\r\n                {[5, 4, 3, 2, 1].map((star) => (\r\n                    <div className=\"rating-row\" key={star}>\r\n                        <span>{star} {star === 1 ? 'star' : 'stars'}</span>\r\n                        <div className=\"rating-bar\">\r\n                            <div \r\n                                className={`rating-fill rating-${star}`}\r\n                                style={{ width: `${reviewCountsByStar[star] ? (reviewCountsByStar[star] / totalReviews * 100).toFixed(1) : 0}%` }}\r\n                            ></div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ReviewFilters = ({ onSearch }) => {\r\n    return (\r\n        <div className=\"review-filters\">\r\n            <div className=\"filter-buttons\">\r\n                <button className=\"filter-button\">\r\n                    Yelp Sort\r\n                    <FontAwesomeIcon icon={faCaretDown} className=\"caret-icon\" />\r\n                </button>\r\n                <button className=\"filter-button\">Filter by rating\r\n                    <FontAwesomeIcon icon={faCaretDown} className=\"caret-icon\" />\r\n                </button>\r\n            </div>\r\n            <div className=\"search-reviews\">\r\n                <input type=\"text\" placeholder=\"Search reviews\" onChange={(e) => onSearch(e.target.value)} />\r\n                <FontAwesomeIcon icon={faSearch} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// const ReviewFilters = () => (\r\n//     <div className=\"review-filters\">\r\n//         <div className=\"filter-buttons\">\r\n//             <button className=\"filter-button\">\r\n//                 Yelp Sort\r\n//                 <FontAwesomeIcon icon={faCaretDown} className=\"caret-icon\" />\r\n//             </button>\r\n//             <button className=\"filter-button\">Filter by rating\r\n//                 <FontAwesomeIcon icon={faCaretDown} className=\"caret-icon\" />\r\n//             </button>\r\n//         </div>\r\n//         <div className=\"search-reviews\">\r\n//             <input type=\"text\" placeholder=\"Search reviews\" onChange={(e) => onSearch(e.target.value)} />\r\n//             <FontAwesomeIcon icon={faSearch} />\r\n//         </div>\r\n//     </div>\r\n// );\r\n\r\n\r\nconst ReviewList = ({ reviews }) => {\r\n    const [menuVisible, setMenuVisible] = useState(false);\r\n    const actionMenuRef = useRef(null);\r\n    \r\n    const handleClickOutside = (event) => {\r\n        if (actionMenuRef.current && !actionMenuRef.current.contains(event.target)) {\r\n            setMenuVisible(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"review-list\">\r\n            {reviews.map((review, index) => (\r\n                <div key={index} className=\"review-item\">\r\n                    <div className=\"review-avatar\">\r\n                        <img\r\n                            src=\"https://s3-media0.fl.yelpcdn.com/assets/public/default_user_avatar_64x64_v2.yji-19e0a8ff85b15f4bbd79.png\"\r\n                            alt=\"Review Avatar\"\r\n                            className=\"review-avatar-img\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"review-content\">\r\n                        <div className=\"review-header\">\r\n                            <h5>{review.username || 'Anonymous'}</h5>\r\n                        </div>\r\n                        <div className=\"review-metrics\">\r\n                            <span>162 <FontAwesomeIcon icon={faCamera} /></span>\r\n                            <span>500 <FontAwesomeIcon icon={faStar} /></span>\r\n                            <span>462 <FontAwesomeIcon icon={faStar} /></span>\r\n                        </div>\r\n                        <div className=\"review-rating\">\r\n                            {[...Array(review.score)].map((_, index) => (\r\n                                <FontAwesomeIcon key={index} icon={faStar} className=\"star-icon\" />\r\n                            ))}\r\n                        </div>\r\n                        <p className=\"review-text\">{review.body}</p>\r\n                    </div>\r\n                    <div className=\"review-actions\" ref={actionMenuRef}>\r\n                        <FontAwesomeIcon\r\n                            icon={faEllipsisH}\r\n                            className=\"ellipsis-icon\"\r\n                            onClick={() => setMenuVisible(!menuVisible)}\r\n                        />\r\n                        {menuVisible && (\r\n                            <div className=\"action-menu\">\r\n                                <div className=\"action-item\">Share review</div>\r\n                                <div className=\"action-item\">Embed review</div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\n// const ReviewList = () => {\r\n//     const [menuVisible, setMenuVisible] = useState(false);\r\n//     const actionMenuRef = useRef(null);\r\n    \r\n//     const handleClickOutside = (event) => {\r\n//         if (actionMenuRef.current && !actionMenuRef.current.contains(event.target)) {\r\n//             setMenuVisible(false);\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         document.addEventListener('mousedown', handleClickOutside);\r\n//         return () => {\r\n//             document.removeEventListener('mousedown', handleClickOutside);\r\n//         };\r\n//     }, []);\r\n\r\n//     return (\r\n//         <div className=\"review-list\">\r\n//             <div className=\"review-item\">\r\n//                 <div className=\"review-avatar\">\r\n//                     <img\r\n//                         src=\"https://s3-media0.fl.yelpcdn.com/assets/public/default_user_avatar_64x64_v2.yji-19e0a8ff85b15f4bbd79.png\"\r\n//                         alt=\"Review Avatar\"\r\n//                         className=\"review-avatar-img\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className=\"review-content\">\r\n//                     <div className=\"review-header\">\r\n//                         <h5>Colette G.</h5>\r\n//                     </div>\r\n//                     {/* <p className=\"user-location\">Shoreham, NY</p> */}\r\n//                     <div className=\"review-metrics\">\r\n//                         <span>162 <FontAwesomeIcon icon={faCamera} /></span>\r\n//                         <span>500 <FontAwesomeIcon icon={faStar} /></span>\r\n//                         <span>462 <FontAwesomeIcon icon={faStar} /></span>\r\n//                     </div>\r\n//                     <div className=\"review-rating\">\r\n//                         {[1, 2, 3, 4, 5].map((star, index) => (\r\n//                             <FontAwesomeIcon icon={faStar} key={index} className=\"star-icon\" />\r\n//                         ))}\r\n//                     </div>\r\n//                     {/* <p className=\"review-date\">Dec 10, 2021</p> */}\r\n//                     <p className=\"review-text\">\r\n//                         This review is strictly for chicken sandwich, and the drive thru. WOW! Those commercials you see of people moaning in their vehicle over how good it is...is no lie!\r\n//                     </p>\r\n//                     <div className=\"review-actions\" ref={actionMenuRef}>\r\n//                         <FontAwesomeIcon\r\n//                             icon={faEllipsisH}\r\n//                             className=\"ellipsis-icon\"\r\n//                             onClick={() => setMenuVisible(!menuVisible)}\r\n//                         />\r\n//                         {menuVisible && (\r\n//                             <div className=\"action-menu\">\r\n//                                 <div className=\"action-item\">Share review</div>\r\n//                                 <div className=\"action-item\">Embed review</div>\r\n//                             </div>\r\n//                         )}\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\nconst WriteReviewForm = ({ restaurantId, onCancel }) => {\r\n    const [rating, setRating] = useState(0);\r\n    const [reviewText, setReviewText] = useState('');\r\n    const [tags, setTags] = useState({ food: false, service: false, ambiance: false });\r\n\r\n    const handleTagClick = (tag) => {\r\n        setTags({ ...tags, [tag]: !tags[tag] });\r\n    };\r\n\r\n    const submitReview = () => {\r\n        const token = window.sessionStorage.getItem(\"token\");\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        };\r\n\r\n        const data = {\r\n            restaurantId,\r\n            rating,\r\n            reviewText,\r\n            tags\r\n        };\r\n\r\n        axios.post('http://localhost:8080/api/reviews', data, config)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                onCancel();\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"write-review-page\">\r\n            <h1>Write a Review</h1>\r\n            <div className=\"review-input\">\r\n                <StarRatingInput setRating={setRating} />\r\n                <textarea \r\n                    placeholder=\"Write your review here...\" \r\n                    value={reviewText} \r\n                    onChange={(e) => setReviewText(e.target.value)}\r\n                />\r\n                <div className=\"tags\">\r\n                    <span onClick={() => handleTagClick('food')} className={tags.food ? 'tag active' : 'tag'}>Food</span>\r\n                    <span onClick={() => handleTagClick('service')} className={tags.service ? 'tag active' : 'tag'}>Service</span>\r\n                    <span onClick={() => handleTagClick('ambiance')} className={tags.ambiance ? 'tag active' : 'tag'}>Ambiance</span>\r\n                </div>\r\n            </div>\r\n            <button className=\"post-review-button\" onClick={submitReview}>Post Review</button>\r\n            <button className=\"cancel-button\" onClick={onCancel}>Cancel</button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst RecommendedReviews = ({ reviews, averageRating, restaurantName }) => {\r\n    const [filteredReviews, setFilteredReviews] = useState([]);\r\n    const [writingReview, setWritingReview] = useState(false);\r\n    const reviewCountsByStar = { 5: 10, 4: 7, 3: 5, 2: 2, 1: 1 };\r\n\r\n    const handleSearch = (searchText) => {\r\n        const filtered = reviews.filter(review =>\r\n            review.body.toLowerCase().includes(searchText.toLowerCase())\r\n        );\r\n        setFilteredReviews(filtered);\r\n    };\r\n\r\n    return (\r\n        <div className=\"recommended-reviews-container\">\r\n            {writingReview ? (\r\n                <WriteReviewForm \r\n                    restaurantName={restaurantName} \r\n                    onCancel={() => setWritingReview(false)} \r\n                />\r\n            ) : (\r\n                <>\r\n                    <h3>Recommended Reviews</h3>\r\n                    <UserReviewPrompt onWriteReview={() => setWritingReview(true)} />\r\n                        <OverallRating\r\n                            averageRating={averageRating}\r\n                            reviewCount={reviews.length}\r\n                            reviews={reviews}\r\n                            reviewCountsByStar={reviewCountsByStar} />\r\n                    <ReviewFilters onSearch={handleSearch} />\r\n                    <ReviewList reviews={reviews} />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecommendedReviews;\r\n","import React , { useState, useEffect } from 'react';\r\nimport moment from 'moment/moment';\r\nimport { FaBook, FaCamera } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAuth } from '../Auth/AuthContext';\r\nimport './Restaurants.css';\r\nimport './RestaurantList.css'; \r\nimport './DetailPage.css';\r\nimport './ReviewPage.css';\r\nimport RecommendedReviews from './ReviewPage';\r\nimport SearchBar from './Restaurant';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-regular-svg-icons';\r\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\r\nimport { faBookmark } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FaArrowUpFromBracket, FaArrowUpRightFromSquare } from 'react-icons/fa6';\r\nimport { FaBackward, FaForward } from 'react-icons/fa';\r\n\r\nconst PhotoGallery = ({ name, restaurantId, averageRating, reviewCount, imageUrls }) => {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const displayCount = 3;\r\n\r\n    const goPrev = () => {\r\n        setCurrentIndex(prevIndex => Math.max(prevIndex - displayCount, 0));\r\n    };\r\n\r\n    const goNext = () => {\r\n        setCurrentIndex(prevIndex => Math.min(prevIndex + displayCount, imageUrls.length - displayCount));\r\n    };\r\n\r\n    return (\r\n        <div className=\"gallery-container\">\r\n            <button className=\"nav-button left\" onClick={goPrev} disabled={currentIndex === 0}>\r\n                <FaBackward />\r\n            </button>\r\n            <div className=\"images-row\">\r\n                {imageUrls.slice(currentIndex, currentIndex + displayCount).map((imageUrl, index) => (\r\n                    <span className=\"image-container\" key={index}>\r\n                        <img src={imageUrl.url} alt={`${name} image ${index + 1 + currentIndex}`} />\r\n                    </span>\r\n                ))}\r\n            </div>\r\n            <button className=\"nav-button right\" onClick={goNext} disabled={currentIndex + displayCount >= imageUrls.length}>\r\n                <FaForward />\r\n            </button>\r\n            <div className=\"overlay-text\">\r\n                {name}\r\n                <br />⭐ {averageRating} ({reviewCount} reviews)\r\n            </div>\r\n            <button className=\"see-all-button\">\r\n                <FaCamera /> See all {imageUrls.length} photos\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Buttons = ({ restaurantId }) => {\r\n    const [isSaved, setIsSaved] = useState(false);\r\n\r\n    const handleSaveToFavorites = () => {\r\n        if (isSaved) return;\r\n\r\n        const userId = localStorage.getItem('userId');\r\n        const token = localStorage.getItem('token');\r\n\r\n        fetch(`http://localhost:8080/api/v1/favorites/add`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,  \r\n            },\r\n            body: JSON.stringify({ userId, restaurantId })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setIsSaved(true); \r\n                alert('Added to favorites!');\r\n            } else {\r\n                throw new Error(data.message || 'Failed to save');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error adding to favorites:', error);\r\n            alert(error.message);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"interactive-buttons\">\r\n            <Link to={`/detail/${restaurantId}/write-review`} className=\"write-review-link\">\r\n                <FontAwesomeIcon icon={faStar} />\r\n                <span style={{ marginLeft: '8px' }}>Write a review</span>\r\n            </Link>\r\n            <Link to={`/detail/${restaurantId}/upload-photo`} className=\"button-add-photo\">\r\n                <FontAwesomeIcon icon={faCamera} />\r\n                <span style={{ marginLeft: '8px' }}>Add photo</span>\r\n            </Link>\r\n            <button className=\"button-share\">\r\n                <FaArrowUpFromBracket />\r\n                <span style={{ marginLeft: '8px' }}>Share</span>\r\n            </button>\r\n            <button \r\n                className=\"button-save\" \r\n                onClick={handleSaveToFavorites} \r\n                disabled={isSaved}\r\n            >\r\n                <FontAwesomeIcon icon={faBookmark} />\r\n                <span style={{ marginLeft: '8px' }}>{isSaved ? 'Saved' : 'Save'}</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ContactInfo = ({email, phone, location, website}) => (\r\n    <div className=\"contact-info\">\r\n        <div className=\"website-link\">\r\n            {website}\r\n        </div>\r\n        <div className=\"email\">\r\n            <p>Email:</p> {email}\r\n        </div>\r\n        {/* <a href=\"https://www.popeyes.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"website-link\">\r\n            popeyes.com\r\n        </a> */}\r\n        <div className=\"phone-number\">\r\n            <p>Phone:</p> {phone}\r\n        </div>\r\n        <div className=\"get-directions\">\r\n            <strong>Location:</strong> {location}\r\n            <a href=\"#\" className=\"get-directions-link\">Get Directions</a>\r\n            {/* <p>800 W Randolph St, Chicago, IL 60607</p> */}\r\n        </div>\r\n        <button className=\"edit-button\">\r\n            <FontAwesomeIcon icon={faPencilAlt} style={{ marginRight: '8px' }}/>\r\n            Suggest an edit\r\n        </button>\r\n    </div>\r\n);\r\n\r\nconst Menu = ({ menu }) => {\r\n    const handleFullMenuClick = (url) => {\r\n        window.location.href = url; \r\n    };\r\n\r\n    return (\r\n        <div className=\"menu-container\">\r\n            <h3>Menu</h3>\r\n            <div>\r\n                <button className='menu-button' onClick={() => handleFullMenuClick(menu)}>\r\n                    <FaArrowUpRightFromSquare />\r\n                    <span style={{ marginLeft: '8px' }}>Website menu</span>\r\n                </button>\r\n                <button className='menu-button' onClick={() => handleFullMenuClick(menu)}>\r\n                    <FaBook />\r\n                    <span style={{ marginLeft: '8px' }}>Full menu</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LocationAndHours = ({ address, hoursJson }) => {\r\n    let hours;\r\n    try {\r\n        hours = JSON.parse(hoursJson);\r\n    } catch (error) {\r\n        console.error(\"Error parsing hours JSON:\", error);\r\n        hours = {};\r\n    }\r\n\r\n    const isCurrentlyOpen = (hourRange) => {\r\n        if (!hourRange || hourRange.toLowerCase() === 'closed') {\r\n            return false;\r\n        }\r\n\r\n        const [openTime, closeTime] = hourRange.split(' - ');\r\n        const now = moment();\r\n        const startTime = moment(openTime, \"hh:mm A\");\r\n        let endTime = moment(closeTime, \"hh:mm A\");\r\n\r\n        if (endTime.isBefore(startTime)) {\r\n            endTime.add(1, 'day'); // Continue to the next day\r\n        }\r\n\r\n        if (now.isBefore(startTime) && now.format(\"A\") === \"AM\") {\r\n            startTime.subtract(1, 'day');\r\n            endTime.subtract(1, 'day');\r\n        }\r\n\r\n        return now.isBetween(startTime, endTime);\r\n    };\r\n\r\n    const dayOrder = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n    const today = moment().format('ddd');\r\n\r\n    const sortedDays = Object.entries(hours).sort((a, b) => {\r\n        return dayOrder.indexOf(a[0]) - dayOrder.indexOf(b[0]);\r\n    });\r\n\r\n    return (\r\n        <div className=\"location-hours-container\">\r\n            <h3>Location & Hours</h3>\r\n            <div className=\"location-hours-content\">\r\n                <div className=\"map-and-details\">\r\n                    <img src=\"https://maps.googleapis.com/maps/api/staticmap?size=315x150&sensor=false&client=gme-yelp&language=en&scale=1&zoom=15&center=40.802938%2C-72.868491&markers=scale%3A1%7Cicon%3Ahttps%3A%2F%2Fyelp-images.s3.amazonaws.com%2Fassets%2Fmap-markers%2Fannotation_32x43.png%7C40.802938%2C-72.868491&signature=XNQ01HCT3t3HQ6cARzDhXl2x7mM=\" alt=\"Map\" />\r\n                    <div className=\"address-direction\">\r\n                        <div className=\"address\">\r\n                            {address}\r\n                        </div>\r\n                        <button className=\"get-directions-button\">\r\n                            Get directions\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"hours\">\r\n                    <table className=\"hours-table\">\r\n                        <tbody>\r\n                            {sortedDays.map(([day, hours], index) => {\r\n                                const open = isCurrentlyOpen(hours);\r\n                                const isToday = day === today;\r\n                                return (\r\n                                    <tr key={index} className={isToday ? 'today' : ''}>\r\n                                        <td>{day}</td>\r\n                                        <td>\r\n                                            <span className=\"hours-and-status\">\r\n                                                {hours}\r\n                                                {isToday && (\r\n                                                    <span className={`status ${open ? 'open' : 'closed'}`}>\r\n                                                        {open ? 'Open now' : 'Closed now'}\r\n                                                    </span>\r\n                                                )}\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst RestaurantDetail = () => {\r\n    const { restaurantId } = useParams();\r\n    const authContext = useAuth();\r\n    const token = authContext.token;\r\n    const [restaurantDetails, setRestaurantDetails] = useState(null);\r\n    const [reviews, setReviews] = useState([]);\r\n    const [averageRating, setAverageRating] = useState(0);\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8080/api/v1/restaurants/${restaurantId}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setRestaurantDetails(data);\r\n                fetchReviews();\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching details:', error);\r\n            });\r\n    }, [restaurantId]);\r\n\r\n    const fetchReviews = () => {\r\n        if (!token) {\r\n            console.log('No token provided. User is not authenticated.');\r\n            return;\r\n        }\r\n        fetch(`http://localhost:8080/api/v1/reviews/${restaurantId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setReviews(data);\r\n                const totalScore = data.reduce((acc, review) => acc + review.score, 0);\r\n                setAverageRating((totalScore / data.length).toFixed(1));\r\n                console.log((totalScore / data.length).toFixed(1));\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error loading reviews:\", error);\r\n        });\r\n    };\r\n\r\n    if (!restaurantDetails) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <SearchBar />\r\n            <PhotoGallery\r\n                name={restaurantDetails.name}\r\n                restaurantId={restaurantDetails.id}\r\n                averageRating={averageRating}\r\n                reviewCount={reviews.length}\r\n                imageUrls={restaurantDetails.imageUrls}/>\r\n            <div className='main-content'>\r\n                <div className=\"info-column\">\r\n                    <Buttons restaurantId={restaurantDetails.id} />\r\n                    <Menu \r\n                        website={restaurantDetails.website}\r\n                        // fullMenuUrl={restaurantDetails.fullMenuUrl}\r\n                    />\r\n                    <LocationAndHours\r\n                        address={restaurantDetails.location}\r\n                        hoursJson={restaurantDetails.hours} />\r\n                    <RecommendedReviews\r\n                        restaurantId={restaurantDetails.id}\r\n                        restaurantName= {restaurantDetails.name}\r\n                        averageRating={restaurantDetails.rating}\r\n                        reviews={reviews} />\r\n                </div>\r\n                <div className=\"order-column\">\r\n                    <ContactInfo\r\n                        email={restaurantDetails.email}\r\n                        phone={restaurantDetails.phone}\r\n                        location={restaurantDetails.location}\r\n                        website={restaurantDetails.website}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RestaurantDetail;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { FaYelp } from 'react-icons/fa';\r\nimport StarRatingInput from './StarRatingInput'; \r\nimport './WriteReviewPage.css';\r\nimport './Restaurants.css';\r\nimport { useAuth } from '../Auth/AuthContext';\r\n\r\nfunction WriteReviewPage() {\r\n    const authContext = useAuth();\r\n    const token = authContext.token;\r\n    console.log(\"Auth Context:\", authContext); \r\n    console.log(\"Token:\", authContext.token); \r\n    const { restaurantId } = useParams();\r\n    const [body, setBody] = useState(\"\");\r\n    const [score, setScore] = useState(0);\r\n    const [restaurantName, setRestaurantName] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8080/api/v1/restaurants/${restaurantId}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setRestaurantName(data.name);\r\n            })\r\n            .catch(error => console.error('Failed to load restaurant details', error));\r\n    }, [restaurantId]);\r\n\r\n    const handleInputChange = (event) => {\r\n        setBody(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (body.trim() === \"\" || score === 0) {\r\n            alert(\"Please enter a review and select a score before submitting.\");\r\n            return;\r\n        }\r\n\r\n        if (!token) {\r\n            alert(\"You are not logged in.\");\r\n            return;\r\n        }\r\n\r\n        console.log('Attempting to submit review with token:', token);\r\n\r\n        const parsedRestaurantId = Number(restaurantId);\r\n\r\n        const reviewData = {\r\n            restaurantId: parsedRestaurantId, \r\n            userId: authContext.userId, \r\n            body,\r\n            score,\r\n        };\r\n\r\n        fetch('http://localhost:8080/api/v1/reviews/add', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(reviewData),\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to submit review');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log('Review submitted successfully:', data);\r\n            navigate('/detail/write-review/success'); \r\n        })\r\n        .catch(error => {\r\n            console.error('Error submitting review:', error);\r\n            alert('Error submitting review. Please try again.');\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"header\">\r\n                <div className=\"logo\"><FaYelp size=\"30\" style={{ color: 'white' }} /></div>\r\n            </header>\r\n            <div className=\"write-review-page\">\r\n                <h2>{restaurantName}</h2>\r\n                <form onSubmit={handleSubmit} className=\"review-form\">\r\n                    <div className=\"review-box\">\r\n                        <StarRatingInput setRating={setScore} />\r\n                        <textarea value={body} onChange={handleInputChange} placeholder=\"Share your experience...\" className=\"review-textarea\"></textarea>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"post-review-button\">Post Review</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WriteReviewPage;","import React from 'react';\r\nimport './Restaurants.css';\r\nimport './RestaurantList.css'; \r\nimport './DetailPage.css';\r\nimport './ReviewPage.css';\r\nimport './SuccessPage.css';\r\nimport SearchBar from './Restaurant';\r\nimport { LuPartyPopper } from \"react-icons/lu\";\r\n\r\nfunction SuccessPage() {\r\n    return (\r\n        <div>\r\n            <SearchBar />\r\n            <div className=\"submit-success-page\">\r\n                <LuPartyPopper size=\"50\"/>\r\n                <h2>Your review is now live!</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SuccessPage;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FaYelp } from 'react-icons/fa';  \r\nimport './OwnerDashboard.css';\r\nimport { width } from '@fortawesome/free-brands-svg-icons/fa42Group';\r\n\r\nfunction OwnerDashboard() {\r\n    const [restaurant, setRestaurant] = useState({\r\n        name: '',\r\n        email: '',\r\n        location: '',\r\n        phone: '',\r\n        cuisine: '',\r\n        zipcode: '',\r\n        hours: '',\r\n        imageUrls: '',\r\n        menu: '',\r\n        website: ''\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setRestaurant({ ...restaurant, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:8080/api/v1/restaurants/add', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify(restaurant)\r\n            });\r\n            if (!response.ok) throw new Error('Failed to add restaurant');\r\n            alert('Restaurant added successfully!');\r\n            navigate('/list');\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            alert('Error adding restaurant');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-wrapper\">\r\n            <header className=\"header\">\r\n                <div className=\"logo\">\r\n                    <FaYelp size=\"30\" style={{ color: 'white' }} />\r\n                    YYYYYelppppppp for business\r\n                </div>\r\n            </header>\r\n            <div className=\"owner-dashboard\">\r\n                <h2 className=\"dashboard-heading\">Great! Now Create Your Business Here</h2>\r\n                <form onSubmit={handleSubmit} className=\"business-form\">\r\n                    <input type=\"text\" name=\"name\" value={restaurant.name} onChange={handleChange} placeholder=\"Business Name\" />\r\n                    <input type=\"email\" name=\"email\" value={restaurant.email} onChange={handleChange} placeholder=\"Email Address\" />\r\n                    <div className=\"inline-fields\">\r\n                        <div className=\"field\">\r\n                            <input type=\"text\" name=\"location\" value={restaurant.location} onChange={handleChange} placeholder=\"Business Location\" />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <input type=\"text\" name=\"zipcode\" value={restaurant.zipcode} onChange={handleChange} placeholder=\"ZIP Code\" />\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"text\" name=\"phone\" value={restaurant.phone} onChange={handleChange} placeholder=\"Contact Phone\" />\r\n                    <input type=\"text\" name=\"cuisine\" value={restaurant.cuisine} onChange={handleChange} placeholder=\"Cuisine Type\" />\r\n                    <input name=\"hours\" value={restaurant.hours} onChange={handleChange} placeholder=\"Operating Hours\"/>\r\n                    <input name=\"imageUrls\" value={restaurant.imageUrls} onChange={handleChange} placeholder=\"Image URLs\" />\r\n                    <input type=\"text\" name=\"menu\" value={restaurant.menu} onChange={handleChange} placeholder=\"Menu URL\" />\r\n                    <input type=\"text\" name=\"website\" value={restaurant.website} onChange={handleChange} placeholder=\"Website URL\" />\r\n                    <button type=\"submit\" className=\"submit-button\">Submit</button>\r\n                </form>\r\n            </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default OwnerDashboard;\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport './UploadImagePage.css';\r\nimport { FaYelp } from 'react-icons/fa';\r\nimport { useAuth } from '../Auth/AuthContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst UploadImagePage = () => {\r\n    const authContext = useAuth();\r\n    const token = authContext.token;\r\n    const [files, setFiles] = useState([]); \r\n    const [dragOver, setDragOver] = useState(false);\r\n    const { restaurantId } = useParams();\r\n    const [restaurantName, setRestaurantName] = useState(\"\");\r\n    const fileInputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8080/api/v1/restaurants/${restaurantId}`)\r\n            .then(response => response.json())\r\n            .then(data => setRestaurantName(data.name))\r\n            .catch(error => console.error('Failed to load restaurant details', error));\r\n    }, [restaurantId]);\r\n\r\n    const handleFileChange = (e) => {\r\n        e.preventDefault(); \r\n        let newFiles = e.target.files ? Array.from(e.target.files) : Array.from(e.dataTransfer.files);\r\n        setFiles(prev => [...prev, ...newFiles]);\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        const formData = new FormData();\r\n        files.forEach(file => formData.append('file', file));\r\n        fetch(`http://localhost:8080/api/v1/photos/upload/${restaurantId}`, {\r\n            method: 'POST',\r\n            headers: { 'Authorization': `Bearer ${token}` },\r\n            body: formData,\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n            return response.json();\r\n        })\r\n        .then(() => {\r\n            alert('Files uploaded successfully');\r\n            setFiles([]); \r\n        })\r\n        .catch(error => {\r\n            console.error('Error uploading files:', error);\r\n            alert('Error uploading files: ' + error.message);\r\n        });\r\n    };\r\n\r\n    const removeImage = (index) => {\r\n        const newFiles = files.filter((_, i) => i !== index);\r\n        setFiles(newFiles); \r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <header className=\"header\">\r\n                <div className=\"logo\"><FaYelp size=\"30\" style={{ color: 'white' }} /></div>\r\n            </header>\r\n            <div className=\"upload-container\">\r\n                <h2>\r\n                    <Link to={`/detail/${restaurantId}`} className=\"restaurant-link\">{restaurantName}</Link> : Add Photos\r\n                </h2>\r\n                {files.length === 0 ? (\r\n                    <div>\r\n                        <div \r\n                            className={`drop-area ${dragOver ? 'drag-over' : ''}`}\r\n                            onDragOver={(e) => { e.preventDefault(); setDragOver(true); }}\r\n                            onDragLeave={(e) => { e.preventDefault(); setDragOver(false); }}\r\n                            onDrop={handleFileChange}\r\n                        >\r\n                            <img className=\"illustration-img\" src=\"https://s3-media0.fl.yelpcdn.com/assets/public/photo_review_325x200_v2.yji-9de7a3277cea44fd0377.svg\" alt=\"Drag and drop photos here\" />\r\n                            <h3 className=\"info-text\">Drag and drop photos here or</h3>\r\n                            <p className=\"info-text\">or</p>\r\n                            <button onClick={() => fileInputRef.current.click()} className=\"browse-button\">\r\n                                Browse Files\r\n                            </button>\r\n                            <input\r\n                                type=\"file\"\r\n                                multiple\r\n                                onChange={handleFileChange}\r\n                                className=\"file-input\"\r\n                                ref={fileInputRef}\r\n                                style={{ display: 'none' }} \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                        <div>\r\n                            <h3>Almost Done! Add More and Upload!</h3>\r\n                            <div className=\"photos-preview\">\r\n                                {files.map((file, index) => (\r\n                                    <div key={index} className=\"preview-img-wrapper\">\r\n                                        <img src={URL.createObjectURL(file)} alt={`Preview ${index}`} className=\"preview-img\" />\r\n                                        <button className=\"delete-img-btn\" onClick={() => removeImage(index)}>\r\n                                            <FontAwesomeIcon icon={faTrash} />\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        <div className=\"photos-actions\">\r\n                                <Link onClick={() => fileInputRef.current.click()} className=\"browse-link\">\r\n                                    Browse    \r\n                                </Link>\r\n                                <span className=\"info-text\">or drag and drop more photos</span>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    multiple\r\n                                    onChange={handleFileChange}\r\n                                    className=\"file-input\"\r\n                                    ref={fileInputRef}\r\n                                    style={{ display: 'none' }}\r\n                                />\r\n                                <button onClick={handleUpload} className=\"upload-button\">Upload</button>\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\nexport default UploadImagePage;\r\n","import React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport Login from './components/Auth/Login';\nimport { AuthProvider } from './components/Auth/AuthContext';\nimport RestaurantList from './components/Restaurants/RestaurantList';\nimport Signup from './components/Auth/Signup';\nimport HomePage from './components/Restaurants/Restaurant';\nimport RestaurantDetail from './components/Restaurants/RestaurantDetail';\nimport WriteReviewPage from './components/Restaurants/WriteReviewPage'; \nimport SuccessPage from './components/Restaurants/SuccessPage';\nimport OwnerDashboard from './components/Restaurants/OwnerDashboard';\nimport UploadImagePage from './components/Restaurants/UploadImagePage';\n\nexport default function App() {\n  let element = useRoutes([\n    { path: '/', element: <Home /> },\n    { path: '/home', element: <HomePage /> },\n    { path: '/detail/:restaurantId', element: <RestaurantDetail /> },\n    { path: '/detail/:restaurantId/write-review', element: <WriteReviewPage /> },\n    { path: '/detail/:restaurantId/upload-photo', element: <UploadImagePage /> },\n    { path: '/detail/write-review/success', element: <SuccessPage />},\n    { path: '/list', element: <RestaurantList /> },\n    { path: '/start-business', element: <OwnerDashboard /> },\n    { path: '/login', element: <Login /> },\n    { path: 'signup', element: <Signup />}\n  ]);\n\n  return (\n    <AuthProvider>\n      {element}\n    </AuthProvider>\n  );\n}\n\nconst Search = () => {\n  return <form style={{ margin: '10px', borderColor: 'black' }}>\n    <input />\n    <button>submit</button>\n  </form>;\n}\n\nconst Home = () => {\n  return <div>\n    <Search />\n    <Search />\n    <article>\n      <h1>Hi</h1>\n      <ol>\n        <li>Components: UI Building Blocks</li>\n        <li>Defining a Component</li>\n        <li>Using a Component</li>\n      </ol>\n    </article>\n  </div>;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Router>\n    <App />\n  </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}